<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryFilterCategoriesPartName" xml:space="preserve">
    <value>Select the categories</value>
  </data>
  <data name="CategoryFilterFilterModePartName" xml:space="preserve">
    <value>Category filter mode</value>
  </data>
  <data name="CategorySourcesCategoryName" xml:space="preserve">
    <value>Category sources</value>
  </data>
  <data name="CustomTraceListenerInitializationPartName" xml:space="preserve">
    <value>Initialization</value>
  </data>
  <data name="EmailTraceListenerEnderPartName" xml:space="preserve">
    <value>Subject line ender</value>
  </data>
  <data name="EmailTraceListenerFromAddressPartName" xml:space="preserve">
    <value>From address</value>
  </data>
  <data name="EmailTraceListenerSmtpPortPartName" xml:space="preserve">
    <value>SMTP port</value>
  </data>
  <data name="EmailTraceListenerSmtpServerPartName" xml:space="preserve">
    <value>SMTP server</value>
  </data>
  <data name="EmailTraceListenerStarterPartName" xml:space="preserve">
    <value>Subject line starter</value>
  </data>
  <data name="EmailTraceListenerToAddressPartName" xml:space="preserve">
    <value>To address</value>
  </data>
  <data name="EventLogTraceListenerLogPartName" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="EventLogTraceListenerMachineNamePartName" xml:space="preserve">
    <value>Machine name</value>
  </data>
  <data name="EventLogTraceListenerSourcePartName" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="ExceptionErrorValueNotTimeSpan" xml:space="preserve">
    <value>The value for '{1}' on key '{0}' is not a valid TimeSpan value: '{2}'</value>
  </data>
  <data name="FilterPolicyNameTemplate" xml:space="preserve">
    <value>Specify settings for filter '{0}'</value>
  </data>
  <data name="FlatFileTraceListenerFileNamePartName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="FlatFileTraceListenerFooterPartName" xml:space="preserve">
    <value>Footer</value>
  </data>
  <data name="FlatFileTraceListenerHeaderPartName" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="FormatterPolicyNameTemplate" xml:space="preserve">
    <value>Specify settings for formatter '{0}'</value>
  </data>
  <data name="LogEnabledFilterEnabledPartName" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="LogFiltersCategoryName" xml:space="preserve">
    <value>Log filters</value>
  </data>
  <data name="LogFormattersCategoryName" xml:space="preserve">
    <value>Log formatters</value>
  </data>
  <data name="LoggingSectionCategoryName" xml:space="preserve">
    <value>Logging</value>
  </data>
  <data name="LoggingSettingsDefaultCategoryPartName" xml:space="preserve">
    <value>Default category</value>
  </data>
  <data name="LoggingSettingsEnableTracingPartName" xml:space="preserve">
    <value>Enable tracing</value>
  </data>
  <data name="LoggingSettingsLogWarningPartName" xml:space="preserve">
    <value>Log warning on missing category</value>
  </data>
  <data name="LoggingSettingsPolicyName" xml:space="preserve">
    <value>Specify Logging Application Block Settings</value>
  </data>
  <data name="MsmqTraceListenerPriorityPartName" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="MsmqTraceListenerQueuePathPartName" xml:space="preserve">
    <value>Queue path</value>
  </data>
  <data name="MsmqTraceListenerRecoverablePartName" xml:space="preserve">
    <value>Recoverable</value>
  </data>
  <data name="MsmqTraceListenerTransactionTypePartName" xml:space="preserve">
    <value>Transaction type</value>
  </data>
  <data name="MsmqTraceListenerTtbrPartName" xml:space="preserve">
    <value>Time to be received</value>
  </data>
  <data name="MsmqTraceListenerTtrqPartName" xml:space="preserve">
    <value>Time to reach queue</value>
  </data>
  <data name="MsmqTraceListenerUseAuthenticationPartName" xml:space="preserve">
    <value>Use authentication</value>
  </data>
  <data name="MsmqTraceListenerUseDeadLetterQueuePartName" xml:space="preserve">
    <value>Use dead letter queue</value>
  </data>
  <data name="MsmqTraceListenerUseEncryptionPartName" xml:space="preserve">
    <value>Use encryption</value>
  </data>
  <data name="PriorityFilterMaximumPriorityPartName" xml:space="preserve">
    <value>Maximum priority</value>
  </data>
  <data name="PriorityFilterMinimumPriorityPartName" xml:space="preserve">
    <value>Minimum priority</value>
  </data>
  <data name="RollingFlatFileTraceListenerFileNamePartName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="RollingFlatFileTraceListenerLockBehaviorPartName" xml:space="preserve">
    <value>Lock behavior</value>
  </data>
  <data name="RollingFlatFileTraceListenerRollFileExistsBehaviorPartName" xml:space="preserve">
    <value>File exists behavior</value>
  </data>
  <data name="RollingFlatFileTraceListenerRollIntervalPartName" xml:space="preserve">
    <value>Roll interval</value>
  </data>
  <data name="RollingFlatFileTraceListenerRollSizeKBPartName" xml:space="preserve">
    <value>Roll size</value>
  </data>
  <data name="RollingFlatFileTraceListenerTimeStampPatternPartName" xml:space="preserve">
    <value>Timestamp pattern</value>
  </data>
  <data name="SpecialSourcesCategoryName" xml:space="preserve">
    <value>Special sources</value>
  </data>
  <data name="TextFormatterEscapeInstructions_1" xml:space="preserve">
    <value>To write a multi-line template, use \n or \r\n to represent a new line;</value>
  </data>
  <data name="TextFormatterEscapeInstructions_2" xml:space="preserve">
    <value>backslashes must also be escaped as \\</value>
  </data>
  <data name="TextFormatterTemplatePartName" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="TraceListenerFormatterPartName" xml:space="preserve">
    <value>Formatter</value>
  </data>
  <data name="TraceListenerPolicyNameTemplate" xml:space="preserve">
    <value>Specify settings for listener '{0}'</value>
  </data>
  <data name="TraceListenersCategoryName" xml:space="preserve">
    <value>Listeners</value>
  </data>
  <data name="TraceListenerTraceOptionsPartName" xml:space="preserve">
    <value>Trace options</value>
  </data>
  <data name="TraceSourceDefaultLevelPartName" xml:space="preserve">
    <value>Default level</value>
  </data>
  <data name="TraceSourceListenersPartName" xml:space="preserve">
    <value>Select the trace listeners</value>
  </data>
  <data name="TraceSourcePolicyNameTemplate" xml:space="preserve">
    <value>Specify '{0}' source settings</value>
  </data>
  <data name="XmlTraceListenerFileNamePartName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="TraceListenerFilterPartName" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="LoggingSettingsRevertImpersonationPartName" xml:space="preserve">
    <value>Revert impersonation</value>
  </data>
  <data name="RollingFlatFileTraceListenerMaxArchivedFilesPartName" xml:space="preserve">
    <value>Max archived files</value>
  </data>
  <data name="TraceSourceAutoFlushPartName" xml:space="preserve">
    <value>Auto flush</value>
  </data>
</root>